#!/bin/sh
#	confhc -- detect installed Haskell compilers and versions
#	author:   Malcolm.Wallace@cs.york.ac.uk, Sept 1999

echo "  (hmake configuration is done once only.)"
echo "First we look for already-installed Haskell compilers:"

# Assume that we start out with a blank config.
HBCDIR=
GHCDIR=
NHC13DIR=
NHC98DIR=
# ToDo: If any of these variables are already set, we should skip the tests
# for that compiler.

# There are a variety of possible schemes for distinguishing
# architecture-specific files across a shared heterogeneous network.
# We try most of them here while looking for existing compilers.

MACHINE=`script/harch`
if arch >/dev/null 2>&1
then methods="machdir machext machpre archdir archext archpre none"
     ARCH=`arch`
else methods="machdir machext machpre none"
     ARCH=unknown
fi


# This is the mapping from names to methods.
method () {
  ext=$1
  case $2 in
    none)    echo ${ext} ;;
    machdir) echo ${ext}/${MACHINE} ;;
    machext) echo ${ext}-${MACHINE} ;;
    machpre) echo ${MACHINE}/${ext} ;;
    archdir) echo ${ext}/${ARCH}    ;;
    archext) echo ${ext}-${ARCH}    ;;
    archpre) echo ${ARCH}/${ext}    ;;
    *)       echo unknown ;;
  esac
}

# This is the quoted mapping from names to methods (so we can generate
# a shell script for the method).
methodtext () {
  ext=$1
  case $2 in
    none)    echo "${ext}" ;;
    machdir) echo "${ext}/\$\{MACHINE\}" ;;
    machext) echo "${ext}-\$\{MACHINE\}" ;;
    machpre) echo "\$\{MACHINE\}/${ext}" ;;
    archdir) echo "${ext}/\`arch\`"    ;;
    archext) echo "${ext}-\`arch\`"    ;;
    archpre) echo "\`arch\`/${ext}"    ;;
    *)       echo "unknown" ;;
  esac
}


# This is the test which tries all methods on a range of directories.
# The last successful match is kept - so make sure you call 'trydirs'
# with the locations in increasing order of preference.
trydirs () {
    ext=$1; shift
    for dir in $*
    do
      for m in $methods
      do
        #echo "  ... trying ${dir}/`method ${ext} ${m}`"
        if [ -d ${dir}/`method ${ext} ${m}` ]
        then DIR=${dir}
             EXT=${ext}
             METHOD=${m}
             GHCVER=${ver}	# GHC only
             #echo "found it"
        fi
      done
    done
}


# Ok, so first look for HBC
DIR=
EXT=
METHOD=
echo -n "  Looking for hbc... "
if which hbc >/dev/null 2>&1
then
  HBCVERSION=`hbc -v 2>&1 | cut -c20`
  whichHBC=`which hbc`
  up1_HBC=`dirname $whichHBC`
  up2_HBC=`dirname $up1_HBC`
  trydirs lib/lmlc /usr/local /usr ${up1_HBC} ${up2_HBC}
fi
HBCDIR=${DIR}
HBCEXT=${EXT}
HBCMETHOD=${METHOD}
if [ "$HBCDIR" = "" ]
then
  echo "(not found)"
else
  echo "found 0.9999.${HBCVERSION} in ${HBCDIR}/`method ${HBCEXT} ${HBCMETHOD}`"
  echo "    HBCMETHOD=${HBCMETHOD} `methodtext ${HBCEXT} ${HBCMETHOD}`"
fi


# Now look for GHC.  Determining the version number is a bit trickier here.
DIR=
EXT=
METHOD=
echo -n "  Looking for ghc... "
if which ghc >/dev/null 2>&1
then
  whichGHC=`which ghc`
  up1_GHC=`dirname $whichGHC`
  up2_GHC=`dirname $up1_GHC`
  up3_GHC=`dirname $up3_GHC`
  for ver in 0.29 2.01 2.02 2.03 2.04 2.07 2.08 2.09 2.10 3.00 3.01 3.02 3.03
  do
    trydirs ghc-${ver}/lib/imports /usr/local/lib /usr/lib ${up1_GHC} ${up2_GHC}
  done
  for ver in 4.01 4.02 4.04 4.04pl1 4.05 4.06
  do
    trydirs ghc-${ver}/imports     /usr/local/lib /usr/lib ${up1_GHC} ${up2_GHC}
  done
fi
GHCDIR=${DIR}
GHCEXT=${EXT}
GHCMETHOD=${METHOD}
if [ "$GHCDIR" = "" ]
then  echo "(not found)"
else  echo "found ${GHCVER} in $GHCDIR"
      echo "    GHCMETHOD=${GHCMETHOD} `methodtext ${GHCEXT} ${GHCMETHOD}`"
fi


# Finally, check for previous installations of nhc13 and nhc98.
echo -n "  Looking for nhc13... "
if which nhc13 >/dev/null 2>&1
then
  whichNHC=`which nhc13`
  up1_NHC=`dirname ${whichNHC}`
  up2_NHC=`dirname ${up1_NHC}`
  NHC13DIR=`grep NHC13INCDIR ${whichNHC} | grep ${up2_NHC} | cut -c27- | cut -d'}' -f1`
fi
if [ "$NHC13DIR" = "" ]
then  echo "(not found)"
else  echo "found in $NHC13DIR"
fi

echo -n "  Looking for nhc98... "
if which nhc98 >/dev/null 2>&1
then
  whichNHC=`which nhc98`
  up1_NHC=`dirname ${whichNHC}`
  up2_NHC=`dirname ${up1_NHC}`
  NHC98DIR=`grep NHC98INCDIR ${whichNHC} | grep ${up2_NHC} | cut -c27- | cut -d'}' -f1`
fi
if [ "$NHC98DIR" = "" ]
then  echo "(not found)"
else  echo "found in $NHC98DIR"
fi

BUILDHMAKE=
echo -n "I am guessing that you will want to use "
# in order of preference: hbc, then ghc, then nhc98...
if [ "$HBCDIR" = "" ];
then
  if [ "$GHCDIR" = "" ];
  then
    echo -n nhc98
    BUILDHMAKE=nhc98
  else
    echo -n ghc
    BUILDHMAKE=ghc
  fi
else
  if [ "$GHCDIR" = "" ];
  then
    echo -n hbc
    BUILDHMAKE=hbc
  else
    echo -n "hbc (not ghc)"
    BUILDHMAKE=hbc
  fi
fi
echo " to build hmake."

export HBCDIR GHCDIR NHC13DIR NHC98DIR BUILDHMAKE
echo "  Now I'm creating script/hmake.config for your installation."
cat script/hmakeconfig.inst |\
( if [ "$HBCDIR" = "" ];
  then cat
  else sed -e "s|^lmldir=$|lmldir=${HBCDIR}/`methodtext ${HBCEXT} ${HBCMETHOD}`|" |\
       sed -e "s|^hbcknown=no$|hbcknown=yes|" |\
       ( case HBCVERSION in
           5|6) sed -e "s|^HBC98=$|HBC98=yes|"  ;;
           *)   sed -e "s|^HBC98=$|HBC98=no|" ;;
         esac
       )
  fi
) |\
( if [ "$GHCDIR" = "" ];
  then cat
  else sed -e "s|^ghcincdir=$|ghcincdir=${GHCDIR}/`methodtext ${GHCEXT} ${GHCMETHOD}`|" |\
       sed -e "s|^ghcknown=no$|ghcknown=yes|" |\
       ( case GHCVER in
           0.29) sed -e "s|^GHC=0$|GHC=2|"  ;;
           2.*)  sed -e "s|^GHC=0$|GHC=3|"  ;;
           3.*)  sed -e "s|^GHC=0$|GHC=4|"  ;;
           4.*)  sed -e "s|^GHC=0$|GHC=5|"  ;;
           *)    sed -e "s|^GHC=0$|GHC=6|"  ;;
         esac
       )
  fi
) |\
( if [ "$NHC13DIR" = "" ];
  then cat
  else sed -e "s|^nhc13incdir=$|nhc13incdir=${NHC13DIR}|" |\
       sed -e "s|^nhc13known=no$|nhc13known=yes|"
  fi
) |\
( if [ "$NHC98DIR" = "" ];
  then cat
  else sed -e "s|^nhc98incdir=$|nhc98incdir=${NHC98DIR}|" |\
       sed -e "s|^nhc98known=no$|nhc98known=yes|"
  fi
) |\
( case $BUILDHMAKE in
    ghc|nhc98) sed -e "s|^USINGRTS=$|USINGRTS=rts|" ;;
    hbc)       sed -e "s|^USINGRTS=$|USINGRTS=minus|" ;;
  esac
) \
  >script/hmake.config

echo "If I got something wrong, you can edit script/hmake.config by"
echo "   hand and run 'configure' again. (I will not undo your changes.)"
echo "Done."
exit 0

