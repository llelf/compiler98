module PackedString
(Var "append",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "break",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "concat",Has{args=0,fixity=Def,priority=9,letBound=True})
(Var "cons",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "drop",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "dropWhile",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "filter",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "foldl",Has{args=3,fixity=Def,priority=9,letBound=True})
(Var "foldr",Has{args=3,fixity=Def,priority=9,letBound=True})
(Var "head",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "index",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "length",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "lines",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "map",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "nil",Has{args=0,fixity=Def,priority=9,letBound=True})
(Var "null",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "packString",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "reverse",Has{args=0,fixity=Def,priority=9,letBound=True})
(Var "span",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "splitAt",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "substr",Has{args=3,fixity=Def,priority=9,letBound=True})
(Var "tail",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "take",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "takeWhile",Has{args=2,fixity=Def,priority=9,letBound=True})
(Var "unlines",Has{args=0,fixity=Def,priority=9,letBound=True})
(Var "unpackPS",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "unwords",Has{args=1,fixity=Def,priority=9,letBound=True})
(Var "words",Has{args=1,fixity=Def,priority=9,letBound=True})
